# Set Jetty itself to use java.util.logging for its own purposes.
-Dorg.eclipse.jetty.util.log.class=org.eclipse.jetty.util.log.JavaUtilLog

# You might be tempted to do this. BUT DONT!
# The class for the custom handler isn't loaded yet, and this will fail.
# Instead, rely on runtime handler configuration.
# see etc/jetty-jul.xml for example
#
# -Djava.util.logging.config.file=resources/logging.properties

#===========================================================
# Start classpath OPTIONS.
# These control what classes are on the classpath
# for a full listing do
#   java -jar start.jar --list-options
#-----------------------------------------------------------
OPTIONS=Server,resources,logging,websocket,ext
#-----------------------------------------------------------


#===========================================================
# Configuration files.
# For a full list of available configuration files do
#   java -jar start.jar --help
#-----------------------------------------------------------
etc/jetty.xml
etc/jetty-jul.xml
# etc/jetty-requestlog.xml
etc/jetty-deploy.xml
etc/jetty-webapps.xml
etc/jetty-contexts.xml
etc/jetty-testrealm.xml
#===========================================================
